Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/README.md b/README.md
--- a/README.md	(revision 12b5c1baa3feb09fe73d8716fb812bcb086c6779)
+++ b/README.md	(revision cdb9fb0e8afa02f51dbdaad7edaf589a32b6e6c1)
@@ -1,3 +1,15 @@
 <<<<<<< HEAD
 # spring-mvc-basic-function
-스프링 mvc1편 기본 기능
\ No newline at end of file
+스프링 mvc1편 기본 기능
+
+=======
+# spring mvc 기본 기능
+>>>>>>> e2b5695 (프로젝트 생성)
+
+## HTTP 요청 파라미터 관련 내용 실습
+### 배운점
++ [요청 매핑](https://unique-wandflower-4cc.notion.site/a049acd58d674185b3e1bb291f47f2b9)
++ [회원관리 요청매핑 API](https://unique-wandflower-4cc.notion.site/API-5f088d407b34405ba05850c402738774)
++ [HTTP 요청 - 헤더 조회](https://unique-wandflower-4cc.notion.site/HTTP-5ccda026b62f4e208d70617767d1cb47)
++ [@RequestParam](https://unique-wandflower-4cc.notion.site/HTTP-RequestParam-115b0e3598614d328f527e2270932712)
++ [@ModelAttribute](https://unique-wandflower-4cc.notion.site/HTTP-ModelAttribute-97bf6bb1b60942fe9ef76cda95487b1d)
\ No newline at end of file
Index: src/main/java/hello/springmvc/basic/HelloData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/hello/springmvc/basic/HelloData.java b/src/main/java/hello/springmvc/basic/HelloData.java
new file mode 100644
--- /dev/null	(revision cdb9fb0e8afa02f51dbdaad7edaf589a32b6e6c1)
+++ b/src/main/java/hello/springmvc/basic/HelloData.java	(revision cdb9fb0e8afa02f51dbdaad7edaf589a32b6e6c1)
@@ -0,0 +1,10 @@
+package hello.springmvc.basic;
+
+import lombok.Data;
+
+@Data
+public class HelloData {
+
+    private String userName;
+    private int age;
+}
Index: src/main/java/hello/springmvc/basic/request/RequestBodyJsonController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/hello/springmvc/basic/request/RequestBodyJsonController.java b/src/main/java/hello/springmvc/basic/request/RequestBodyJsonController.java
new file mode 100644
--- /dev/null	(revision cdb9fb0e8afa02f51dbdaad7edaf589a32b6e6c1)
+++ b/src/main/java/hello/springmvc/basic/request/RequestBodyJsonController.java	(revision cdb9fb0e8afa02f51dbdaad7edaf589a32b6e6c1)
@@ -0,0 +1,76 @@
+package hello.springmvc.basic.request;
+
+import com.fasterxml.jackson.databind.ObjectMapper;
+import hello.springmvc.basic.HelloData;
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.http.HttpEntity;
+import org.springframework.stereotype.Controller;
+import org.springframework.util.StreamUtils;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestBody;
+import org.springframework.web.bind.annotation.ResponseBody;
+
+import javax.servlet.ServletInputStream;
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+import java.io.IOException;
+import java.nio.charset.StandardCharsets;
+
+@Slf4j
+@Controller
+public class RequestBodyJsonController {
+
+    private ObjectMapper objectMapper = new ObjectMapper();
+
+    @PostMapping("/request-body-json-v1")
+    public void  requestBodyJsonV1(HttpServletRequest request , HttpServletResponse response) throws IOException {
+        ServletInputStream inputStream = request.getInputStream();
+        String messageBody = StreamUtils.copyToString(inputStream, StandardCharsets.UTF_8);
+
+        log.info("messageBody={}" , messageBody);
+        HelloData helloData = objectMapper.readValue(messageBody, HelloData.class);
+
+        log.info("userName={} , age={}", helloData.getUserName() , helloData.getAge());
+
+        response.getWriter().write("OK");
+    }
+
+    @ResponseBody
+    @PostMapping("/request-body-json-v2")
+    public String  requestBodyJsonV2(@RequestBody String messageBody) throws IOException {
+        log.info("messageBody={}" , messageBody);
+        HelloData helloData = objectMapper.readValue(messageBody, HelloData.class);
+
+        log.info("userName={} , age={}", helloData.getUserName() , helloData.getAge());
+
+        return "OK";
+    }
+
+    @ResponseBody
+    @PostMapping("/request-body-json-v3")
+    public String  requestBodyJsonV3(@RequestBody HelloData helloData) {
+        log.info("messageBody={}" , helloData);
+
+        log.info("userName={} , age={}", helloData.getUserName() , helloData.getAge());
+
+        return "OK";
+    }
+
+    @ResponseBody
+    @PostMapping("/request-body-json-v4")
+    public String  requestBodyJsonV4(HttpEntity<HelloData> helloData) {
+        log.info("messageBody={}" , helloData);
+        HelloData bodyData = helloData.getBody();
+        log.info("userName={} , age={}", bodyData.getUserName() , bodyData.getAge());
+
+        return "OK";
+    }
+
+    @ResponseBody
+    @PostMapping("/request-body-json-v5")
+    public HelloData  requestBodyJsonV5(@RequestBody HelloData helloData) {
+        log.info("userName={} , age={}", helloData.getUserName() , helloData.getAge());
+        return helloData;
+    }
+
+}
Index: src/main/java/hello/springmvc/basic/request/RequestBodyStringController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/hello/springmvc/basic/request/RequestBodyStringController.java b/src/main/java/hello/springmvc/basic/request/RequestBodyStringController.java
new file mode 100644
--- /dev/null	(revision cdb9fb0e8afa02f51dbdaad7edaf589a32b6e6c1)
+++ b/src/main/java/hello/springmvc/basic/request/RequestBodyStringController.java	(revision cdb9fb0e8afa02f51dbdaad7edaf589a32b6e6c1)
@@ -0,0 +1,66 @@
+package hello.springmvc.basic.request;
+
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.http.HttpEntity;
+import org.springframework.http.HttpStatus;
+import org.springframework.http.ResponseEntity;
+import org.springframework.stereotype.Controller;
+import org.springframework.util.StreamUtils;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestBody;
+
+import javax.servlet.ServletInputStream;
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.Writer;
+import java.nio.charset.StandardCharsets;
+
+//에러 https://zzznara2.tistory.com/422
+@Slf4j
+@Controller
+public class RequestBodyStringController {
+
+    @PostMapping("/request-body-string-v1")
+    public void requestBodyString(HttpServletRequest request , HttpServletResponse response) throws IOException {
+        ServletInputStream inputStream = request.getInputStream();
+        String messageBody = StreamUtils.copyToString(inputStream, StandardCharsets.UTF_8);
+
+        log.info("messageBody={}" , messageBody);
+
+        response.getWriter().write("ok");
+    }
+
+    @PostMapping("/request-body-string-v2")
+    public void requestBodyStringV2(InputStream inputStream, Writer responseWriter) throws IOException {
+        String messageBody = StreamUtils.copyToString(inputStream, StandardCharsets.UTF_8);
+        log.info("messageBody={}" , messageBody);
+
+        responseWriter.write("ok");
+    }
+
+    @PostMapping("/request-body-string-v3")
+    public HttpEntity<String> requestBodyStringV3(HttpEntity<String> httpEntity) throws IOException {
+        String messageBody = httpEntity.getBody();
+        log.info("messageBody={}" , messageBody);
+
+        return new HttpEntity<>("Ok");
+    }
+
+    @PostMapping("/request-body-string-v3-1")
+    public HttpEntity<String> requestBodyStringV3_1(ResponseEntity<String> httpEntity) throws IOException {
+        String messageBody = httpEntity.getBody();
+        log.info("messageBody={}" , messageBody);
+
+        return new ResponseEntity<String>("Ok", HttpStatus.CREATED);
+    }
+
+    @PostMapping("/request-body-string-v4")
+    public String requestBodyStringV4(@RequestBody String messageBody) throws IOException {
+
+        log.info("messageBody={}" , messageBody);
+
+        return "Ok";
+    }
+}
Index: src/main/java/hello/springmvc/basic/request/RequestHeaderController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/hello/springmvc/basic/request/RequestHeaderController.java b/src/main/java/hello/springmvc/basic/request/RequestHeaderController.java
new file mode 100644
--- /dev/null	(revision cdb9fb0e8afa02f51dbdaad7edaf589a32b6e6c1)
+++ b/src/main/java/hello/springmvc/basic/request/RequestHeaderController.java	(revision cdb9fb0e8afa02f51dbdaad7edaf589a32b6e6c1)
@@ -0,0 +1,44 @@
+package hello.springmvc.basic.request;
+
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.http.HttpMethod;
+import org.springframework.util.MultiValueMap;
+import org.springframework.web.bind.annotation.CookieValue;
+import org.springframework.web.bind.annotation.RequestHeader;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+import java.util.Locale;
+
+@Slf4j
+@RestController
+public class RequestHeaderController {
+
+    @RequestMapping("/headers")
+    public String headers(HttpServletRequest request ,
+                          HttpServletResponse response ,
+                          HttpMethod httpMethod,
+                          Locale locale,
+                          @RequestHeader MultiValueMap<String, String> headerMap,
+                          @RequestHeader("host") String host,
+                          @CookieValue(value = "myCookie", required = false) String cookie) {
+
+        log.info("request={}", request);
+        log.info("response={}", response);
+        log.info("httpMethod={}", httpMethod);
+        log.info("locale={}", locale);
+        log.info("headerMap={}", headerMap);
+        log.info("header host={}", host);
+        log.info("myCookie={}" , cookie);
+
+
+
+
+
+        return "OK";
+    }
+
+
+}
Index: src/main/java/hello/springmvc/basic/request/RequestParamController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/hello/springmvc/basic/request/RequestParamController.java b/src/main/java/hello/springmvc/basic/request/RequestParamController.java
new file mode 100644
--- /dev/null	(revision cdb9fb0e8afa02f51dbdaad7edaf589a32b6e6c1)
+++ b/src/main/java/hello/springmvc/basic/request/RequestParamController.java	(revision cdb9fb0e8afa02f51dbdaad7edaf589a32b6e6c1)
@@ -0,0 +1,94 @@
+package hello.springmvc.basic.request;
+
+import hello.springmvc.basic.HelloData;
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.stereotype.Controller;
+import org.springframework.web.bind.annotation.*;
+
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+import java.io.IOException;
+import java.util.Map;
+
+@Slf4j
+@Controller
+public class RequestParamController {
+
+    @RequestMapping("/request-param-v1")
+    public void requestParamV1(HttpServletRequest request , HttpServletResponse response) throws IOException {
+        String userName = request.getParameter("userName");
+        int age = Integer.parseInt(request.getParameter("age"));
+
+        log.info("userName={} , age={}", userName , age);
+
+        response.getWriter().write("OK");
+    }
+
+
+    @ResponseBody
+    @RequestMapping("/request-param-v2")
+    public String requestParamV2(@RequestParam("userName") String userName ,
+                                 @RequestParam("age") int memberAge) {
+
+        log.info("userName={} , aage={}", userName , memberAge);
+        return "ok";
+    }
+
+    @ResponseBody
+    @RequestMapping("/request-param-v3")
+    public String requestParamV3(@RequestParam String userName ,
+                                 @RequestParam int age) {
+        log.info("userName={} , age={}", userName , age);
+        return "ok";
+    }
+
+    @ResponseBody
+    @RequestMapping("/request-param-v4")
+    public String requestParamV4(String userName , int age) {
+
+        log.info("userName={} , age={}", userName , age);
+        return "ok";
+    }
+
+
+    @ResponseBody
+    @RequestMapping("/request-param-required")
+    public String requestParamRequired(@RequestParam(required = true) String userName ,
+                                       @RequestParam(required = false) Integer age) {
+
+        log.info("userName={} , age={}", userName , age);
+        return "ok";
+    }
+
+    @ResponseBody
+    @RequestMapping("/request-param-default")
+    public String requestParamDefault(@RequestParam(defaultValue = "guest") String userName ,
+                                       @RequestParam(defaultValue = "-1") int age) {
+
+        log.info("userName={} , age={}", userName , age);
+        return "ok";
+    }
+
+    @ResponseBody
+    @RequestMapping("/request-param-map")
+    public String requestParamMap(@RequestParam Map<String, Object> paramMap) {
+
+        log.info("userName={} , age={}", paramMap.get("userName") , paramMap.get("age"));
+        return "ok";
+    }
+
+    @ResponseBody
+    @RequestMapping("/model-attribute-v1")
+    public String modelAttributeV1(@ModelAttribute HelloData helloData) {
+        log.info("helloData={}" , helloData.toString());
+        return "ok";
+    }
+
+    @ResponseBody
+    @RequestMapping("/model-attribute-v2")
+    public String modelAttributeV2(HelloData helloData) {
+        log.info("helloData={}" , helloData.toString());
+        return "ok";
+    }
+
+}
Index: src/main/java/hello/springmvc/basic/requestmapping/MappingClassController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/hello/springmvc/basic/requestmapping/MappingClassController.java b/src/main/java/hello/springmvc/basic/requestmapping/MappingClassController.java
--- a/src/main/java/hello/springmvc/basic/requestmapping/MappingClassController.java	(revision 12b5c1baa3feb09fe73d8716fb812bcb086c6779)
+++ b/src/main/java/hello/springmvc/basic/requestmapping/MappingClassController.java	(revision cdb9fb0e8afa02f51dbdaad7edaf589a32b6e6c1)
@@ -3,11 +3,11 @@
 import org.springframework.web.bind.annotation.*;
 
 @RestController
-@RequestMapping("/mapping/uses")
+@RequestMapping("/mapping/users")
 public class MappingClassController {
 
     @GetMapping
-    public String user() {
+    public String users() {
         return "get users";
     }
 
Index: src/main/resources/static/basic/hello-form.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/static/basic/hello-form.html b/src/main/resources/static/basic/hello-form.html
new file mode 100644
--- /dev/null	(revision cdb9fb0e8afa02f51dbdaad7edaf589a32b6e6c1)
+++ b/src/main/resources/static/basic/hello-form.html	(revision cdb9fb0e8afa02f51dbdaad7edaf589a32b6e6c1)
@@ -0,0 +1,15 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <title>Title</title>
+</head>
+<body>
+    <form action="/request-param-v1" method="post">
+        username: <input type="text" name="userName" />
+        age: <input type="text" name="age" />
+        <button type="submit">전송</button>
+    </form>
+
+</body>
+</html>
\ No newline at end of file
